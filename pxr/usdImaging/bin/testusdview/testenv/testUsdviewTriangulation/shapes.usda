#usda 1.0
(
    defaultPrim = "root"
    endTimeCode = 300
    framesPerSecond = 30
    startTimeCode = 0
)

def Xform "root"
{
    def Scope "Materials"
    {
        def Material "mat1"
        {
            token outputs:surface.connect = </root/Materials/mat1/PBRShader.outputs:surface>

            def Shader "PBRShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.6120656, 0.6120656, 0.6120656)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.1
                token outputs:surface
            }
        }
    }

    def Mesh "Concave"
    {
        int[] faceVertexCounts = [4]
        int[] faceVertexIndices = [0, 2, 3, 1]
        rel material:binding = </root/Materials/mat1>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)]
        point3f[] points = [(27, -2.5, 0), (17, -2.5, 0), (20, 0.5, 0), (17, 7.5, 0)]
        texCoord2f[] primvars:st = [(1, 0), (1, 1), (0, 1), (0, 0)] (
            interpolation = "faceVarying"
        )
        int[] primvars:st:indices = [0, 1, 2, 3]
        uniform token subdivisionScheme = "none"
    }

    def Mesh "Convex"
    {
        int[] faceVertexCounts = [4]
        int[] faceVertexIndices = [0, 2, 3, 1]
        rel material:binding = </root/Materials/mat1>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)]
        point3f[] points = [(-14, -2.5, 0), (-24, -2.5, 0), (-14, 7.5, 0), (-24, 7.5, 0)]
        texCoord2f[] primvars:st = [(1, 0), (1, 1), (0, 1), (0, 0)] (
            interpolation = "faceVarying"
        )
        int[] primvars:st:indices = [0, 1, 2, 3]
        uniform token subdivisionScheme = "none"
    }

    def Mesh "SimplePolygon"
    {
        int[] faceVertexCounts = [8]
        int[] faceVertexIndices = [0, 1, 2, 3, 4, 5, 6, 7]
        rel material:binding = </root/Materials/mat1>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)]
        point3f[] points = [(1, 6, 0), (3, 7, 0), (2, 3, 0), (6, 1, 0), (8, 2, 0), (7, 5, 0), (5, 4, 0), (4, 8, 0)]
        texCoord2f[] primvars:st = [(1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0)] (
            interpolation = "faceVarying"
        )
        int[] primvars:st:indices = [0, 1, 2, 3, 4, 5, 6, 7]
        uniform token subdivisionScheme = "none"
    }

    def Mesh "StarShaped"
    {
        int[] faceVertexCounts = [8]
        int[] faceVertexIndices = [7, 0, 1, 2, 3, 4, 5, 6]
        rel material:binding = </root/Materials/mat1>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)]
        point3f[] points = [(0, 2, 0), (1, 6, 0), (2, 2, 0), (6, 1, 0), (2, 0, 0), (1, -4, 0), (0, 0, 0), (-4, 1, 0)]
        texCoord2f[] primvars:st = [(1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0)] (
            interpolation = "faceVarying"
        )
        int[] primvars:st:indices = [0, 1, 2, 3, 4, 5, 6, 7]
        uniform token subdivisionScheme = "none"
    }

    def Mesh "Faces3D" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        kind = "component"
    )
    {
        uniform bool doubleSided = 1
        float3[] extent = [(1.5414877, 0, 0), (8.611405, 11.94463, 2.5)]
        int[] faceVertexCounts = [6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 6]
        int[] faceVertexIndices = [5, 4, 3, 2, 1, 0, 0, 1, 7, 6, 1, 2, 8, 7, 2, 3, 9, 8, 3, 4, 10, 9, 4, 5, 11, 10, 5, 0, 6, 11, 6, 7, 13, 12, 7, 8, 14, 13, 8, 9, 15, 14, 9, 10, 16, 15, 10, 11, 17, 16, 11, 6, 12, 17, 12, 13, 19, 18, 13, 14, 20, 19, 14, 15, 21, 20, 15, 16, 22, 21, 16, 17, 23, 22, 17, 12, 18, 23, 18, 19, 25, 24, 19, 20, 26, 25, 20, 21, 27, 26, 21, 22, 28, 27, 22, 23, 29, 28, 23, 18, 24, 29, 24, 25, 26, 27, 28, 29]
        rel material:binding = </typeMesh1/Looks/typeBlinnSG>
        normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(3.236364, 11.94463, 0), (1.5414877, 11.94463, 0), (1.5414877, 0, 0), (8.611405, 0, 0), (8.611405, 1.2671075, 0), (3.236364, 1.2671075, 0), (3.236364, 11.94463, 0.625), (1.5414877, 11.94463, 0.625), (1.5414877, 0, 0.625), (8.611405, 0, 0.625), (8.611405, 1.2671075, 0.625), (3.236364, 1.2671075, 0.625), (3.236364, 11.94463, 1.25), (1.5414877, 11.94463, 1.25), (1.5414877, 0, 1.25), (8.611405, 0, 1.25), (8.611405, 1.2671075, 1.25), (3.236364, 1.2671075, 1.25), (3.236364, 11.94463, 1.875), (1.5414877, 11.94463, 1.875), (1.5414877, 0, 1.875), (8.611405, 0, 1.875), (8.611405, 1.2671075, 1.875), (3.236364, 1.2671075, 1.875), (3.236364, 11.94463, 2.5), (1.5414877, 11.94463, 2.5), (1.5414877, 0, 2.5), (8.611405, 0, 2.5), (8.611405, 1.2671075, 2.5), (3.236364, 1.2671075, 2.5)]
        texCoord2f[] primvars:st = [(0.36664107, 0.60516095), (0.36664107, 0.0018009536), (0.39821175, 0.0018009536), (0.39821175, 0.60516095), (0.4297824, 0.0018009536), (0.4297824, 0.60516095), (0.46135306, 0.0018009536), (0.46135306, 0.60516095), (0.49292374, 0.0018009536), (0.49292374, 0.60516095), (0.57741785, 0.6091524), (0.64142334, 0.6091524), (0.64142334, 0.64072305), (0.57741785, 0.64072305), (0.64142334, 0.6722937), (0.57741785, 0.6722937), (0.64142334, 0.7038644), (0.57741785, 0.7038644), (0.64142334, 0.73543507), (0.57741785, 0.73543507), (0.9899066, 0.0018009567), (0.9899066, 0.54115546), (0.95833594, 0.54115546), (0.95833594, 0.0018009567), (0.92676526, 0.54115546), (0.92676526, 0.0018009567), (0.8951946, 0.54115546), (0.8951946, 0.0018009567), (0.8636239, 0.54115546), (0.8636239, 0.0018009567), (0.733172, 0.73543507), (0.6475586, 0.73543507), (0.6475586, 0.7038644), (0.733172, 0.7038644), (0.6475586, 0.6722937), (0.733172, 0.6722937), (0.6475586, 0.64072305), (0.733172, 0.64072305), (0.6475586, 0.6091524), (0.733172, 0.6091524), (0.8717254, 0.90227014), (0.8717254, 0.5451469), (0.90329605, 0.5451469), (0.90329605, 0.90227014), (0.9348667, 0.5451469), (0.9348667, 0.90227014), (0.9664374, 0.5451469), (0.9664374, 0.90227014), (0.9980081, 0.5451469), (0.9980081, 0.90227014), (0.86559004, 0.6091524), (0.86559004, 0.88066226), (0.83401936, 0.88066226), (0.83401936, 0.6091524), (0.8024487, 0.88066226), (0.8024487, 0.6091524), (0.770878, 0.88066226), (0.770878, 0.6091524), (0.73930734, 0.88066226), (0.73930734, 0.6091524), (0.08760545, 0.54115546), (0.35911533, 0.54115546), (0.35911533, 0.60516095), (0.0019920322, 0.60516095), (0.0019920322, 0.0018009385), (0.08760545, 0.0018009385), (0.5847832, 0.60516095), (0.4991698, 0.60516095), (0.4991698, 0.0018009536), (0.85629314, 0.0018009536), (0.85629314, 0.06580645), (0.5847832, 0.06580645)] (
            customData = {
                dictionary Maya = {
                    token name = "map1"
                }
            }
            interpolation = "faceVarying"
        )
        int[] primvars:st:indices = [60, 61, 62, 63, 64, 65, 30, 31, 32, 33, 0, 1, 2, 3, 40, 41, 42, 43, 10, 11, 12, 13, 50, 51, 52, 53, 20, 21, 22, 23, 33, 32, 34, 35, 3, 2, 4, 5, 43, 42, 44, 45, 13, 12, 14, 15, 53, 52, 54, 55, 23, 22, 24, 25, 35, 34, 36, 37, 5, 4, 6, 7, 45, 44, 46, 47, 15, 14, 16, 17, 55, 54, 56, 57, 25, 24, 26, 27, 37, 36, 38, 39, 7, 6, 8, 9, 47, 46, 48, 49, 17, 16, 18, 19, 57, 56, 58, 59, 27, 26, 28, 29, 66, 67, 68, 69, 70, 71]
        uniform token subdivisionScheme = "none"

        def Scope "Looks"
        {
            def Material "typeBlinnSG"
            {
                token outputs:surface.connect = </typeMesh1/Looks/typeBlinnSG/typeBlinn.outputs:surface>

                def Shader "typeBlinn"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.8, 0.8, 0.8)
                    normal3f inputs:normal = (1, 1, 1)
                    float inputs:roughness = 0.3
                    color3f inputs:specularColor = (0.35, 0.35, 0.35)
                    int inputs:useSpecularWorkflow = 1
                    token outputs:displacement
                    token outputs:surface
                }
            }
        }
    }
}
